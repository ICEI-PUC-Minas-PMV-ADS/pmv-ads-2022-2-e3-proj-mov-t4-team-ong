import React, { Component } from "react";

import { Text } from "@rneui/themed";

import {
    FlatList,
    ImageBackground,
    TouchableOpacity,
    View
} from "react-native";

import Icon from "react-native-vector-icons/FontAwesome";

import moment from "moment/moment"
import 'moment/locale/pt-br'

import todayImage from '../../../assets/imgs/todayList.png'
import tomorrowImage from '../../../assets/imgs/tomorrowList.png'
import weekImage from '../../../assets/imgs/weekList.png'
import monthImage from '../../../assets/imgs/monthList.png'

import ReminderAdd from '../reminder/ReminderAdd'

import commonStyles from "../../common/styles/commonStyles";
import Reminder from "../../components/reminder/Reminder";

initialState = {
    showDoneReminders: true,
    showReminderAdd: false,
    visibleReminders: [],
    reminders: []
}

class ReminderList extends Component {

    state = {
        ...initialState
    }

    toggleFilter = () => {
        this.setState({ showDoneTasks: !this.state.showDoneTasks }, this.filterTasks)
    }

    getImage = () => {
        switch (this.props.daysAhead) {
            case 0: return todayImage
            case 1: return tomorrowImage
            case 7: return weekImage
            case 30: return monthImage
            default: return monthImage
        }
    }

    getColor = () => {
        switch (this.props.daysAhead) {
            case 0: return this.props.schema.today
            case 1: return this.props.schema.tomorrow
            case 7: return this.props.schema.week
            case 30: return this.props.schema.month
            default: return this.props.schema.today
        }
    }

    render() {
        console.log('ReminderList ', this.props)

        const today = moment().locale('pt-br').format('ddd, D [de] MMMM')

        return (
            <View style={commonStyles.container} >
                {this.state.showReminderAdd &&
                    <ReminderAdd
                        isVisible={this.state.showAddTask}
                        onCancel={() => this.setState({ showAddTask: false })}
                        onSave={this.addTask}
                        schema={this.props.schema}
                    />
                }
                <ImageBackground
                    source={this.getImage()}
                    style={commonStyles.containerImage}
                >
                    <View style={commonStyles.iconAlign}>
                        <TouchableOpacity onPress={this.toggleFilter} >
                            <Icon
                                name={this.state.showDoneTasks
                                    ? 'eye' : 'eye-slash'}
                                style={commonStyles.iconImage}
                            />
                        </TouchableOpacity>
                    </View>
                    <View style={commonStyles.titleAlign}>
                        <Text style={commonStyles.titleLarge}>{this.props.title ? this.props.title : 'Hoje'}</Text>
                        <Text style={commonStyles.subtitle}>{today}</Text>
                    </View>
                </ImageBackground>
                <View
                    style={[commonStyles.containerScreen, { backgroundColor: this.props.schema.grey0 }]}
                >
                    <FlatList
                        data={this.state.visibleTasks}
                        keyExtractor={item => item.id}
                        renderItem={({ item }) =>
                            <Reminder
                                {...item}
                                onToggleTasks={this.toggleTasks}
                                onDelete={this.deleteTask}
                                schema={this.props.schema}
                            />}
                    />
                </View>
                <TouchableOpacity
                    style={[commonStyles.addButton, { backgroundColor: this.getColor() }]}
                    onPress={() => this.setState({ showReminderAdd: true })}
                >
                    <Icon name="plus" size={40} />
                </TouchableOpacity>
            </View>
        )
    }
}

export default ReminderList